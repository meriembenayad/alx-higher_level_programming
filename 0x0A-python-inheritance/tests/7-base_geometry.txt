>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> m = __import__("7-base_geometry").__doc__
>>> len(m) > 1
True

>>> c = __import__("7-base_geometry").BaseGeometry.__doc__
>>> len(c) > 1
True

>>> mod1 = __import__("7-base_geometry").BaseGeometry.area.__doc__
>>> len(mod1) > 1
True

>>> mod2 = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
>>> len(mod2) > 1
True

>>> bg = BaseGeometry()

>>> bg.integer_validator("my_int", 12)

>>> bg.integer_validator("width", 89)

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
    ...
TypeError: name must be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
    ...
ValueError: distance must be greater than 0

>>> bg.integer_validator("age", [])
Traceback (most recent call last):
    ...
TypeError: age must be an integer


>>> bg.integer_validator("age", (1, 0))
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> bg.integer_validator("age", 323.2)
Traceback (most recent call last):
    ...
TypeError: age must be an integer
