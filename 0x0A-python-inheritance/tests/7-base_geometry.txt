>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()
>>> bg.integer_validator("name", "5")
Traceback (most recent call last):
    ...
TypeError: name must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("name", True)
Traceback (most recent call last):
    ...
TypeError: name must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("name", -5)
Traceback (most recent call last):
    ...
ValueError: name must be greater than 0

>>> bg = BaseGeometry()
>>> bg.integer_validator("name", 0)
Traceback (most recent call last):
    ...
ValueError: name must be greater than 0

>>> bg = BaseGeometry()
>>> bg.integer_validator("name", 5)

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> bg = BaseGeometry()
>>> try:
    ...   bg.area()
    ... except Exception as e:
    ...   print("[{}] {}".format(e.__class__.__name__, e))
    ...
[Exception] area () is not implemented

>>> bg = BaseGeometry()
>>> bg.integer_validator("name")
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg = BaseGeometry()
>>> bg.integer_validator()
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
